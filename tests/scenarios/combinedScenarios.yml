scenarios:
  - name: users
    flow:
      # - post:
      #     url: "/login"
      #     json:
      #       username: "{{username}}"
      #       password: "{{password}}"
      #     expect:
      #       - statusCode: 200
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      #       - hasProperty: "user_id"
      #       - hasProperty: "role_name"
      #       - hasProperty: "token"
      #     capture:
      #       - json: "$.token"
      #         as: "token"
      # - log: "Token: {{ token }}"
      # - post:
      #     url: "/register"
      #     headers:
      #       authorization: "Bearer {{ token }}"
      #     json:
      #       username: "{{ username }}"
      #       password: "{{ password }}"
      #       type: "{{ type }}"
      #     expect:
      #       - statusCode: 200
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      #       - hasProperty: "statusMessage"
      # - get:
      #     url: "/roles"
      #     expect:
      #       - statusCode: 200
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      #       
      # - delete:
      #     url: "/deladmin/{{ $randomNumber() }}"
      #     headers:
      #       authorization: "Bearer {{ token }}"
      #     expect:
      #       - statusCode: 201
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      - post:
          url: "/adduser"
          json:
            first_name: "{{$randFirstName()}}"
            last_name: "{{$randLastName()}}"
            company: "{{$randCompanyName()}}"
            uid: "{{$randUuid()}}"
            type: "{{u_type}}"
          expect:
            - statusCode: 201
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/users"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8" 
      - get:
          url: "/userlist"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - put:
          url: "/user/{{uid}}"
          json:
            company: "{{$randCompanyName()}}"
            jobtitle: "{{$randJobTitle()}}"
            linkedinurl: "{{$randUrl()}}"
            profile_pic: "{{$randImg()}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/user/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "user_id"
            - hasProperty: "uid"
            - hasProperty: "first_name"
            - hasProperty: "last_name"
            - hasProperty: "company"
            - hasProperty: "jobtitle"
            - hasProperty: "linkedinurl"
            - hasProperty: "profile_pic"
      - get:
          url: "/useruid/{{uid}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "user_id"
            - hasProperty: "uid"
            - hasProperty: "first_name"
            - hasProperty: "last_name"
            - hasProperty: "company"
            - hasProperty: "jobtitle"
            - hasProperty: "linkedinurl"
            - hasProperty: "profile_pic"
  - name: announcements
    flow:
      #     - post:
      #         url: "/announcements"
      #         headers:
      #           authorization: "Bearer {{ token }}"
      #         json:
      #           title: "{{a_title}}"
      #           description: "{{a_description}}"
      #           imageid: "{{image}}"
      #           eventid: "{{a_eventid}}"
      #         expect:
      #           - statusCode: 201
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "announcementid"
      #           - hasProperty: "eventid"
      #           - hasProperty: "title"
      #           - hasProperty: "description"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      #         afterResponse: "storeAnnouncementId"
      - get:
          url: "/announcements"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            
      #     - put:
      #         url: "/announcements/{{$randomItem(announcementIds)}}"
      #         headers:
      #           authorization: "Bearer {{ token }}"
      #         json:
      #           title: "{{a_title}}"
      #           description: "{{a_description}}"
      #           image: "{{image}}"
      #           eventid: "{{a_eventid}}"
      #         expect:
      #           - statusCode: 201
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "announcementid"
      #           - hasProperty: "eventid"
      #           - hasProperty: "title"
      #           - hasProperty: "description"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      - get:
          url: "/announcements/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "announcementid"
            - hasProperty: "eventid"
            - hasProperty: "title"
            - hasProperty: "description"
            - hasProperty: "created_on"
            - hasProperty: "updated_on"
      #     - delete:
      #         url: "/announcements/{{$randomItem(announcementIds)}}"
      #         headers:
      #           authorization: "Bearer {{ token }}"
      #         expect:
      #           - statusCode: 200
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      - get:
          url: "/eventannouncements/{{a_eventid}}"
          expect:
            - statusCode: 200
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "announcementid"
            - hasProperty: "eventid"
            - hasProperty: "title"
            - hasProperty: "description"
            - hasProperty: "created_on"
            - hasProperty: "updated_on"
  - name: events
    flow:
      #     - post:
      #         url: "/events"
      #         headers:
      #           authorization: "Bearer {{ token }}"
      #         json:
      #           - title: "{{e_title}}"
      #           - image_banner: "{{image_banner}}"
      #           - time_start: "{{time_start}}"
      #           - time_end: "{{time_end}}"
      #           - location: "{{location}}"
      #           - keynote_speaker: "{{keynote_speaker}}"
      #           - description: "{{e_description}}"
      #           - survey_link: "{{survey_link}}"
      #         expect:
      #           - statusCode: 201
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "eventid"
      #           - hasProperty: "title"
      #           - hasProperty: "image_banner"
      #           - hasProperty: "time_start"
      #           - hasProperty: "time_end"
      #           - hasProperty: "location"
      #           - hasProperty: "keynote_speaker"
      #           - hasProperty: "description"
      #           - hasProperty: "survey_link"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      #         afterResponse:
      #           - "storeEventId"
      - get:
          url: "/events"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/eventsannouncement"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      #     - put:
      #         url: "/events/{{$randomItem(eventIds)}}"
      #         headers:
      #           authorization: "Bearer {{ token }}"
      #         json:
      #           - title: "{{e_title}}"
      #           - image_banner: "{{image_banner}}"
      #           - time_start: "{{time_start}}"
      #           - time_end: "{{time_end}}"
      #           - location: "{{location}}"
      #           - keynote_speaker: "{{keynote_speaker}}"
      #           - description: "{{e_description}}"
      #           - survey_link: "{{survey_link}}"
      #         expect:
      #           - statusCode: 200
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "eventid"
      #           - hasProperty: "title"
      #           - hasProperty: "image_banner"
      #           - hasProperty: "time_start"
      #           - hasProperty: "time_end"
      #           - hasProperty: "location"
      #           - hasProperty: "keynote_speaker"
      #           - hasProperty: "description"
      #           - hasProperty: "survey_link"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      - get:
          url: "/events/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "eventid"
            - hasProperty: "title"
            - hasProperty: "image_banner"
            - hasProperty: "time_start"
            - hasProperty: "time_end"
            - hasProperty: "location"
            - hasProperty: "keynote_speaker"
            - hasProperty: "description"
            - hasProperty: "survey_link"
  #     - delete:
  #         url: "/deleteevent/{{$randomItem(eventIds)}}"
  #         headers:
  #           authorization: "Bearer {{ token }}"
  #         expect:
  #           - statusCode: 201
  #           - hasHeader: "content-type"
  #           - contentType: "application/json; charset=utf-8"
      - post:
          url: "/saveevent"
          json:
            - eventid: "{{a_eventid}}"
            - uid: "{{uid}}"
          expect:
            - statusCode: 201
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/saveevents/{{uid}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/mostsavedEvent"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
  #     - delete:
  #         url: "/delevent/{{uid}}"
  #         expect:
  #           - statusCode: 201
  #           - hasHeader: "content-type"
  #           - contentType: "application/json; charset=utf-8"
  - name: importantinformation
    flow:
      #     - post:
      #         url: "/importantInformation"
      #         headers:
      #           authorization: 'Bearer {{ token }}'
      #         json:
      #           - title: "{{i_title}}"
      #           - subtitle: "{{i_subtitle}}"
      #           - description: "{{i_description}}"
      #           - image: "{{i_image}}"
      #         expect:
      #           - statusCode: 201
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "infoid"
      #           - hasProperty: "title"
      #           - hasProperty: "subtitle"
      #           - hasProperty: "description"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      #         afterResponse:
      #           - "storeInfoId"
      - get:
          url: "/importantInformation"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      #     - put:
      #         url: "/importantinfo/{{$randomItem(infoIds)}}"
      #         headers:
      #           authorization: 'Bearer {{ token }}'
      #         json:
      #           - title: "{{i_title}}"
      #           - subtitle: "{{i_subtitle}}"
      #           - description: "{{i_description}}"
      #           - image: "{{i_image}}"
      #         expect:
      #           - statusCode: 200
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "infoid"
      #           - hasProperty: "title"
      #           - hasProperty: "subtitle"
      #           - hasProperty: "description"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      - get:
          url: "/info/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "infoid"
            - hasProperty: "title"
            - hasProperty: "subtitle"
            - hasProperty: "description"
            - hasProperty: "image"
  #     - delete:
  #           url: "/delete/{{$randomItem(infoIds)}}"
  #           headers:
  #             authorization: 'Bearer {{ token }}'
  #           expect:
  #             - statusCode: 200
  #             - hasHeader: "content-type"
  #             - contentType: "application/json; charset=utf-8"
  - name: marker
    flow:
      #     - post:
      #         url: "/marker"
      #         headers:
      #           authorization: 'Bearer {{ token }}'
      #         json:
      #           - location_name: "{{location_name}}"
      #           - category: "{{category}}"
      #           - description: "{{m_description}}"
      #           - coordinates: "{{coordinates}}"
      #           - image: "{{image}}"
      #         expect:
      #           - statusCode: 201
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "mapid"
      #           - hasProperty: "location_name"
      #           - hasProperty: "category"
      #           - hasProperty: "description"
      #           - hasProperty: "coordinates"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      #         afterResponse:
      #             - "storeMapId"
      - get:
          url: "/markers"
          expect:
            - statusCode: 200
            - contentType: "application/json; charset=utf-8"
      #     - put:
      #         url: "/marker/{{$randomItem(mapIds)}}"
      #         headers:
      #           authorization: 'Bearer {{ token }}'
      #         json:
      #           - location_name: "{{location_name}}"
      #           - category: "{{category}}"
      #           - description: "{{m_description}}"
      #           - image: "{{image}}"
      #         expect:
      #           - statusCode: 200
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "mapid"
      #           - hasProperty: "location_name"
      #           - hasProperty: "category"
      #           - hasProperty: "description"
      #           - hasProperty: "coordinates"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      - get:
          url: "/markerindiv/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "mapid"
            - hasProperty: "location_name"
            - hasProperty: "category"
            - hasProperty: "description"
            - hasProperty: "coordinates"
            - hasProperty: "image"
  #     - delete:
  #         url: "/delmarker/{{$randomItem(mapIds)}}"
  #         headers:
  #           authorization: 'Bearer {{token}}'
  #         expect:
  #           - statusCode: 201
  #           - hasHeader: "content-type"
  #           - contentType: "application/json; charset=utf-8"
  - name: helpinfo
    flow:
      #     - post:
      #         url: "/helpinfo"
      #         headers:
      #           authorization: 'Bearer {{ token }}'
      #         json:
      #           - title: "{{h_title}}"
      #           - subtitle: "{{h_subtitle}}"
      #           - description: "{{h_description}}"
      #           - image: "{{image}}"
      #         expect:
      #           - statusCode: 201
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "helpid"
      #           - hasProperty: "title"
      #           - hasProperty: "subtitle"
      #           - hasProperty: "description"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      #         afterResponse:
      #           - "storeHelpId"
      - get:
          url: "/helpinfos"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      #     - put:
      #         url: "/helpinfo/{{$randomItem(helpIds)}}"
      #         headers:
      #           authorization: 'Bearer {{token}}'
      #         json:
      #           - title: "{{h_title}}"
      #           - subtitle: "{{h_subtitle}}"
      #           - description: "{{h_description}}"
      #           - image: "{{image}}"
      #         expect:
      #           - statusCode: 200
      #           - hasHeader: "content-type"
      #           - contentType: "application/json; charset=utf-8"
      #           - hasProperty: "helpid"
      #           - hasProperty: "title"
      #           - hasProperty: "subtitle"
      #           - hasProperty: "description"
      #           - hasProperty: "image"
      #           - hasProperty: "created_at"
      #           - hasProperty: "updated_at"
      - get:
          url: "/helpinfos/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
  #     - delete:
  #         url: "/delhelpinfo/{{$randomItem(helpIds)}}"
  #         headers:
  #           authorization: 'Bearer {{token}}'
  #         expect:
  #           - statusCode: 201
  #           - hasHeader: "content-type"
  #           - contentType: "application/json; charset=utf-8"
