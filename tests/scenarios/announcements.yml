scenarios:
  - name: announcements
    flow:
      # - post:
      #     url: "/announcements"
      #     headers:
      #       authorization: "Bearer {{ token }}"
      #     json:
      #       title: "{{a_title}}"
      #       description: "{{a_description}}"
      #       imageid: "{{image}}"
      #       eventid: "{{a_eventid}}"
      #     expect:
      #       - statusCode: 201
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      #       - hasProperty: "announcementid"
      #       - hasProperty: "eventid"
      #       - hasProperty: "title"
      #       - hasProperty: "description"
      #       - hasProperty: "image"
      #       - hasProperty: "created_at"
      #       - hasProperty: "updated_at"
      #     afterResponse: "storeAnnouncementId"
      - get:
          url: "/announcements"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      # - put:
      #     url: "/announcements/{{$randomItem(announcementIds)}}"
      #     headers:
      #       authorization: "Bearer {{ token }}"
      #     json:
      #       title: "{{a_title}}"
      #       description: "{{a_description}}"
      #       image: "{{image}}"
      #       eventid: "{{a_eventid}}"
      #     expect:
      #       - statusCode: 201
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      #       - hasProperty: "announcementid"
      #       - hasProperty: "eventid"
      #       - hasProperty: "title"
      #       - hasProperty: "description"
      #       - hasProperty: "image"
      #       - hasProperty: "created_at"
      #       - hasProperty: "updated_at"
      - get:
          url: "/announcements/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "announcementid"
            - hasProperty: "eventid"
            - hasProperty: "title"
            - hasProperty: "description"
            - hasProperty: "created_on"
            - hasProperty: "updated_on"
      # - delete:
      #     url: "/announcements/{{$randomItem(announcementIds)}}"
      #     headers:
      #       authorization: "Bearer {{ token }}"
      #     expect:
      #       - statusCode: 200
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      - get:
          url: "/eventannouncements/{{a_eventid}}"
          expect:
            - statusCode: 200
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "announcementid"
            - hasProperty: "eventid"
            - hasProperty: "title"
            - hasProperty: "description"
            - hasProperty: "created_on"
            - hasProperty: "updated_on"
