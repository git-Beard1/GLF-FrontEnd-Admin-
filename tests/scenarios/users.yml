scenarios:
  - name: users
    flow:
      # - get:
      #     url: "/roles"
      #     expect:
      #       - statusCode: 200
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      #       
      # - delete:
      #     url: "/deladmin/{{$randomItem(roleIds)}}"
      #     expect:
      #       - statusCode: 201
      #       - hasHeader: "content-type"
      #       - contentType: "application/json; charset=utf-8"
      - post:
          url: "/adduser"
          json:
            first_name: "{{$randFirstName()}}"
            last_name: "{{$randLastName()}}"
            company: "{{$randCompanyName()}}"
            uid: "{{$randUuid()}}"
            type: "{{u_type}}"
          expect:
            - statusCode: 201
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/users"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/userlist"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - put:
          url: "/user/{{uid}}"
          json:
            company: "{{$randCompanyName()}}"
            jobtitle: "{{$randJobTitle()}}"
            linkedinurl: "{{$randUrl()}}"
            profile_pic: "{{$randImg()}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
      - get:
          url: "/user/{{$randomNumber(1, 10)}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "user_id"
            - hasProperty: "uid"
            - hasProperty: "first_name"
            - hasProperty: "last_name"
            - hasProperty: "company"
            - hasProperty: "jobtitle"
            - hasProperty: "linkedinurl"
            - hasProperty: "profile_pic"
      - get:
          url: "/useruid/{{uid}}"
          expect:
            - statusCode: 200
            - hasHeader: "content-type"
            - contentType: "application/json; charset=utf-8"
            - hasProperty: "user_id"
            - hasProperty: "uid"
            - hasProperty: "first_name"
            - hasProperty: "last_name"
            - hasProperty: "company"
            - hasProperty: "jobtitle"
            - hasProperty: "linkedinurl"
            - hasProperty: "profile_pic"